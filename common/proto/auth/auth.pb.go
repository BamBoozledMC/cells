// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	auth.proto

It has these top-level messages:
	Token
	MatchInvalidTokenRequest
	MatchInvalidTokenResponse
	RevokeTokenRequest
	RevokeTokenResponse
	PruneTokensRequest
	PruneTokensResponse
	ID
	GetLoginRequest
	GetLoginResponse
	CreateLoginRequest
	CreateLoginResponse
	AcceptLoginRequest
	AcceptLoginResponse
	GetConsentRequest
	GetConsentResponse
	CreateConsentRequest
	CreateConsentResponse
	AcceptConsentRequest
	AcceptConsentResponse
	CreateLogoutRequest
	CreateLogoutResponse
	AcceptLogoutRequest
	AcceptLogoutResponse
	CreateAuthCodeRequest
	CreateAuthCodeResponse
	VerifyTokenRequest
	VerifyTokenResponse
	ExchangeRequest
	ExchangeResponse
	RefreshTokenRequest
	RefreshTokenResponse
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type State int32

const (
	State_NO_MATCH State = 0
	State_REVOKED  State = 1
)

var State_name = map[int32]string{
	0: "NO_MATCH",
	1: "REVOKED",
}
var State_value = map[string]int32{
	"NO_MATCH": 0,
	"REVOKED":  1,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Token struct {
	Value          string `protobuf:"bytes,1,opt,name=Value" json:"Value,omitempty"`
	AdditionalInfo string `protobuf:"bytes,2,opt,name=AdditionalInfo" json:"AdditionalInfo,omitempty"`
}

func (m *Token) Reset()                    { *m = Token{} }
func (m *Token) String() string            { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()               {}
func (*Token) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Token) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Token) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

type MatchInvalidTokenRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
}

func (m *MatchInvalidTokenRequest) Reset()                    { *m = MatchInvalidTokenRequest{} }
func (m *MatchInvalidTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*MatchInvalidTokenRequest) ProtoMessage()               {}
func (*MatchInvalidTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MatchInvalidTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type MatchInvalidTokenResponse struct {
	State          State  `protobuf:"varint,1,opt,name=State,enum=auth.State" json:"State,omitempty"`
	RevocationInfo string `protobuf:"bytes,2,opt,name=RevocationInfo" json:"RevocationInfo,omitempty"`
}

func (m *MatchInvalidTokenResponse) Reset()                    { *m = MatchInvalidTokenResponse{} }
func (m *MatchInvalidTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*MatchInvalidTokenResponse) ProtoMessage()               {}
func (*MatchInvalidTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MatchInvalidTokenResponse) GetState() State {
	if m != nil {
		return m.State
	}
	return State_NO_MATCH
}

func (m *MatchInvalidTokenResponse) GetRevocationInfo() string {
	if m != nil {
		return m.RevocationInfo
	}
	return ""
}

type RevokeTokenRequest struct {
	Token *Token `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
}

func (m *RevokeTokenRequest) Reset()                    { *m = RevokeTokenRequest{} }
func (m *RevokeTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*RevokeTokenRequest) ProtoMessage()               {}
func (*RevokeTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RevokeTokenRequest) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type RevokeTokenResponse struct {
	Success bool `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
}

func (m *RevokeTokenResponse) Reset()                    { *m = RevokeTokenResponse{} }
func (m *RevokeTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*RevokeTokenResponse) ProtoMessage()               {}
func (*RevokeTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RevokeTokenResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type PruneTokensRequest struct {
}

func (m *PruneTokensRequest) Reset()                    { *m = PruneTokensRequest{} }
func (m *PruneTokensRequest) String() string            { return proto.CompactTextString(m) }
func (*PruneTokensRequest) ProtoMessage()               {}
func (*PruneTokensRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type PruneTokensResponse struct {
	Tokens []string `protobuf:"bytes,1,rep,name=tokens" json:"tokens,omitempty"`
}

func (m *PruneTokensResponse) Reset()                    { *m = PruneTokensResponse{} }
func (m *PruneTokensResponse) String() string            { return proto.CompactTextString(m) }
func (*PruneTokensResponse) ProtoMessage()               {}
func (*PruneTokensResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PruneTokensResponse) GetTokens() []string {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type ID struct {
	Challenge string `protobuf:"bytes,1,opt,name=Challenge" json:"Challenge,omitempty"`
	Verifier  string `protobuf:"bytes,2,opt,name=Verifier" json:"Verifier,omitempty"`
	CSRF      string `protobuf:"bytes,3,opt,name=CSRF" json:"CSRF,omitempty"`
}

func (m *ID) Reset()                    { *m = ID{} }
func (m *ID) String() string            { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()               {}
func (*ID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ID) GetChallenge() string {
	if m != nil {
		return m.Challenge
	}
	return ""
}

func (m *ID) GetVerifier() string {
	if m != nil {
		return m.Verifier
	}
	return ""
}

func (m *ID) GetCSRF() string {
	if m != nil {
		return m.CSRF
	}
	return ""
}

type GetLoginRequest struct {
	Challenge string `protobuf:"bytes,1,opt,name=Challenge" json:"Challenge,omitempty"`
}

func (m *GetLoginRequest) Reset()                    { *m = GetLoginRequest{} }
func (m *GetLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*GetLoginRequest) ProtoMessage()               {}
func (*GetLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetLoginRequest) GetChallenge() string {
	if m != nil {
		return m.Challenge
	}
	return ""
}

type GetLoginResponse struct {
	Challenge         string   `protobuf:"bytes,1,opt,name=Challenge" json:"Challenge,omitempty"`
	Subject           string   `protobuf:"bytes,2,opt,name=Subject" json:"Subject,omitempty"`
	SessionID         string   `protobuf:"bytes,3,opt,name=SessionID" json:"SessionID,omitempty"`
	RequestURL        string   `protobuf:"bytes,4,opt,name=RequestURL" json:"RequestURL,omitempty"`
	RequestedScope    []string `protobuf:"bytes,5,rep,name=RequestedScope" json:"RequestedScope,omitempty"`
	RequestedAudience []string `protobuf:"bytes,6,rep,name=RequestedAudience" json:"RequestedAudience,omitempty"`
	ClientID          string   `protobuf:"bytes,7,opt,name=ClientID" json:"ClientID,omitempty"`
}

func (m *GetLoginResponse) Reset()                    { *m = GetLoginResponse{} }
func (m *GetLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*GetLoginResponse) ProtoMessage()               {}
func (*GetLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetLoginResponse) GetChallenge() string {
	if m != nil {
		return m.Challenge
	}
	return ""
}

func (m *GetLoginResponse) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *GetLoginResponse) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *GetLoginResponse) GetRequestURL() string {
	if m != nil {
		return m.RequestURL
	}
	return ""
}

func (m *GetLoginResponse) GetRequestedScope() []string {
	if m != nil {
		return m.RequestedScope
	}
	return nil
}

func (m *GetLoginResponse) GetRequestedAudience() []string {
	if m != nil {
		return m.RequestedAudience
	}
	return nil
}

func (m *GetLoginResponse) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

type CreateLoginRequest struct {
	ClientID  string   `protobuf:"bytes,1,opt,name=ClientID" json:"ClientID,omitempty"`
	Scopes    []string `protobuf:"bytes,2,rep,name=Scopes" json:"Scopes,omitempty"`
	Audiences []string `protobuf:"bytes,3,rep,name=Audiences" json:"Audiences,omitempty"`
}

func (m *CreateLoginRequest) Reset()                    { *m = CreateLoginRequest{} }
func (m *CreateLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateLoginRequest) ProtoMessage()               {}
func (*CreateLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CreateLoginRequest) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *CreateLoginRequest) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *CreateLoginRequest) GetAudiences() []string {
	if m != nil {
		return m.Audiences
	}
	return nil
}

type CreateLoginResponse struct {
	Login *ID `protobuf:"bytes,1,opt,name=Login" json:"Login,omitempty"`
}

func (m *CreateLoginResponse) Reset()                    { *m = CreateLoginResponse{} }
func (m *CreateLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateLoginResponse) ProtoMessage()               {}
func (*CreateLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CreateLoginResponse) GetLogin() *ID {
	if m != nil {
		return m.Login
	}
	return nil
}

type AcceptLoginRequest struct {
	Challenge string `protobuf:"bytes,1,opt,name=Challenge" json:"Challenge,omitempty"`
	Verifier  string `protobuf:"bytes,2,opt,name=Verifier" json:"Verifier,omitempty"`
	Subject   string `protobuf:"bytes,3,opt,name=Subject" json:"Subject,omitempty"`
}

func (m *AcceptLoginRequest) Reset()                    { *m = AcceptLoginRequest{} }
func (m *AcceptLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*AcceptLoginRequest) ProtoMessage()               {}
func (*AcceptLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AcceptLoginRequest) GetChallenge() string {
	if m != nil {
		return m.Challenge
	}
	return ""
}

func (m *AcceptLoginRequest) GetVerifier() string {
	if m != nil {
		return m.Verifier
	}
	return ""
}

func (m *AcceptLoginRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

type AcceptLoginResponse struct {
}

func (m *AcceptLoginResponse) Reset()                    { *m = AcceptLoginResponse{} }
func (m *AcceptLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*AcceptLoginResponse) ProtoMessage()               {}
func (*AcceptLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type GetConsentRequest struct {
	Challenge string `protobuf:"bytes,1,opt,name=Challenge" json:"Challenge,omitempty"`
}

func (m *GetConsentRequest) Reset()                    { *m = GetConsentRequest{} }
func (m *GetConsentRequest) String() string            { return proto.CompactTextString(m) }
func (*GetConsentRequest) ProtoMessage()               {}
func (*GetConsentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *GetConsentRequest) GetChallenge() string {
	if m != nil {
		return m.Challenge
	}
	return ""
}

type GetConsentResponse struct {
	Challenge         string `protobuf:"bytes,1,opt,name=Challenge" json:"Challenge,omitempty"`
	LoginSessionID    string `protobuf:"bytes,2,opt,name=LoginSessionID" json:"LoginSessionID,omitempty"`
	SubjectIdentifier string `protobuf:"bytes,3,opt,name=SubjectIdentifier" json:"SubjectIdentifier,omitempty"`
	Subject           string `protobuf:"bytes,4,opt,name=Subject" json:"Subject,omitempty"`
	ClientID          string `protobuf:"bytes,5,opt,name=ClientID" json:"ClientID,omitempty"`
}

func (m *GetConsentResponse) Reset()                    { *m = GetConsentResponse{} }
func (m *GetConsentResponse) String() string            { return proto.CompactTextString(m) }
func (*GetConsentResponse) ProtoMessage()               {}
func (*GetConsentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *GetConsentResponse) GetChallenge() string {
	if m != nil {
		return m.Challenge
	}
	return ""
}

func (m *GetConsentResponse) GetLoginSessionID() string {
	if m != nil {
		return m.LoginSessionID
	}
	return ""
}

func (m *GetConsentResponse) GetSubjectIdentifier() string {
	if m != nil {
		return m.SubjectIdentifier
	}
	return ""
}

func (m *GetConsentResponse) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *GetConsentResponse) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

type CreateConsentRequest struct {
	LoginChallenge string `protobuf:"bytes,1,opt,name=LoginChallenge" json:"LoginChallenge,omitempty"`
}

func (m *CreateConsentRequest) Reset()                    { *m = CreateConsentRequest{} }
func (m *CreateConsentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateConsentRequest) ProtoMessage()               {}
func (*CreateConsentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *CreateConsentRequest) GetLoginChallenge() string {
	if m != nil {
		return m.LoginChallenge
	}
	return ""
}

type CreateConsentResponse struct {
	Consent *ID `protobuf:"bytes,1,opt,name=Consent" json:"Consent,omitempty"`
}

func (m *CreateConsentResponse) Reset()                    { *m = CreateConsentResponse{} }
func (m *CreateConsentResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateConsentResponse) ProtoMessage()               {}
func (*CreateConsentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CreateConsentResponse) GetConsent() *ID {
	if m != nil {
		return m.Consent
	}
	return nil
}

type AcceptConsentRequest struct {
	Challenge   string            `protobuf:"bytes,1,opt,name=Challenge" json:"Challenge,omitempty"`
	Scopes      []string          `protobuf:"bytes,2,rep,name=Scopes" json:"Scopes,omitempty"`
	Audiences   []string          `protobuf:"bytes,3,rep,name=Audiences" json:"Audiences,omitempty"`
	AccessToken map[string]string `protobuf:"bytes,4,rep,name=AccessToken" json:"AccessToken,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IDToken     map[string]string `protobuf:"bytes,5,rep,name=IDToken" json:"IDToken,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *AcceptConsentRequest) Reset()                    { *m = AcceptConsentRequest{} }
func (m *AcceptConsentRequest) String() string            { return proto.CompactTextString(m) }
func (*AcceptConsentRequest) ProtoMessage()               {}
func (*AcceptConsentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *AcceptConsentRequest) GetChallenge() string {
	if m != nil {
		return m.Challenge
	}
	return ""
}

func (m *AcceptConsentRequest) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *AcceptConsentRequest) GetAudiences() []string {
	if m != nil {
		return m.Audiences
	}
	return nil
}

func (m *AcceptConsentRequest) GetAccessToken() map[string]string {
	if m != nil {
		return m.AccessToken
	}
	return nil
}

func (m *AcceptConsentRequest) GetIDToken() map[string]string {
	if m != nil {
		return m.IDToken
	}
	return nil
}

type AcceptConsentResponse struct {
}

func (m *AcceptConsentResponse) Reset()                    { *m = AcceptConsentResponse{} }
func (m *AcceptConsentResponse) String() string            { return proto.CompactTextString(m) }
func (*AcceptConsentResponse) ProtoMessage()               {}
func (*AcceptConsentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

type CreateLogoutRequest struct {
	RequestURL string `protobuf:"bytes,1,opt,name=RequestURL" json:"RequestURL,omitempty"`
	Subject    string `protobuf:"bytes,2,opt,name=Subject" json:"Subject,omitempty"`
	SessionID  string `protobuf:"bytes,3,opt,name=SessionID" json:"SessionID,omitempty"`
}

func (m *CreateLogoutRequest) Reset()                    { *m = CreateLogoutRequest{} }
func (m *CreateLogoutRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateLogoutRequest) ProtoMessage()               {}
func (*CreateLogoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *CreateLogoutRequest) GetRequestURL() string {
	if m != nil {
		return m.RequestURL
	}
	return ""
}

func (m *CreateLogoutRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *CreateLogoutRequest) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

type CreateLogoutResponse struct {
	Logout *ID `protobuf:"bytes,1,opt,name=Logout" json:"Logout,omitempty"`
}

func (m *CreateLogoutResponse) Reset()                    { *m = CreateLogoutResponse{} }
func (m *CreateLogoutResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateLogoutResponse) ProtoMessage()               {}
func (*CreateLogoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *CreateLogoutResponse) GetLogout() *ID {
	if m != nil {
		return m.Logout
	}
	return nil
}

type AcceptLogoutRequest struct {
	Challenge    string `protobuf:"bytes,1,opt,name=Challenge" json:"Challenge,omitempty"`
	AccessToken  string `protobuf:"bytes,2,opt,name=AccessToken" json:"AccessToken,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=RefreshToken" json:"RefreshToken,omitempty"`
}

func (m *AcceptLogoutRequest) Reset()                    { *m = AcceptLogoutRequest{} }
func (m *AcceptLogoutRequest) String() string            { return proto.CompactTextString(m) }
func (*AcceptLogoutRequest) ProtoMessage()               {}
func (*AcceptLogoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *AcceptLogoutRequest) GetChallenge() string {
	if m != nil {
		return m.Challenge
	}
	return ""
}

func (m *AcceptLogoutRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *AcceptLogoutRequest) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type AcceptLogoutResponse struct {
}

func (m *AcceptLogoutResponse) Reset()                    { *m = AcceptLogoutResponse{} }
func (m *AcceptLogoutResponse) String() string            { return proto.CompactTextString(m) }
func (*AcceptLogoutResponse) ProtoMessage()               {}
func (*AcceptLogoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type CreateAuthCodeRequest struct {
	Consent     *ID    `protobuf:"bytes,1,opt,name=Consent" json:"Consent,omitempty"`
	ClientID    string `protobuf:"bytes,2,opt,name=ClientID" json:"ClientID,omitempty"`
	RedirectURI string `protobuf:"bytes,3,opt,name=RedirectURI" json:"RedirectURI,omitempty"`
}

func (m *CreateAuthCodeRequest) Reset()                    { *m = CreateAuthCodeRequest{} }
func (m *CreateAuthCodeRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAuthCodeRequest) ProtoMessage()               {}
func (*CreateAuthCodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CreateAuthCodeRequest) GetConsent() *ID {
	if m != nil {
		return m.Consent
	}
	return nil
}

func (m *CreateAuthCodeRequest) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *CreateAuthCodeRequest) GetRedirectURI() string {
	if m != nil {
		return m.RedirectURI
	}
	return ""
}

type CreateAuthCodeResponse struct {
	Code string `protobuf:"bytes,1,opt,name=Code" json:"Code,omitempty"`
}

func (m *CreateAuthCodeResponse) Reset()                    { *m = CreateAuthCodeResponse{} }
func (m *CreateAuthCodeResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAuthCodeResponse) ProtoMessage()               {}
func (*CreateAuthCodeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *CreateAuthCodeResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type VerifyTokenRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
}

func (m *VerifyTokenRequest) Reset()                    { *m = VerifyTokenRequest{} }
func (m *VerifyTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*VerifyTokenRequest) ProtoMessage()               {}
func (*VerifyTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *VerifyTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type VerifyTokenResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *VerifyTokenResponse) Reset()                    { *m = VerifyTokenResponse{} }
func (m *VerifyTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*VerifyTokenResponse) ProtoMessage()               {}
func (*VerifyTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *VerifyTokenResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *VerifyTokenResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ExchangeRequest struct {
	Code         string `protobuf:"bytes,1,opt,name=Code,json=code" json:"Code,omitempty"`
	CodeVerifier string `protobuf:"bytes,2,opt,name=CodeVerifier,json=code_verifier" json:"CodeVerifier,omitempty"`
}

func (m *ExchangeRequest) Reset()                    { *m = ExchangeRequest{} }
func (m *ExchangeRequest) String() string            { return proto.CompactTextString(m) }
func (*ExchangeRequest) ProtoMessage()               {}
func (*ExchangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *ExchangeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ExchangeRequest) GetCodeVerifier() string {
	if m != nil {
		return m.CodeVerifier
	}
	return ""
}

type ExchangeResponse struct {
	AccessToken  string `protobuf:"bytes,1,opt,name=AccessToken,json=access_token" json:"AccessToken,omitempty"`
	IDToken      string `protobuf:"bytes,2,opt,name=IDToken,json=id_token" json:"IDToken,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=RefreshToken,json=refresh_token" json:"RefreshToken,omitempty"`
	Expiry       int64  `protobuf:"varint,4,opt,name=Expiry,json=expiry" json:"Expiry,omitempty"`
}

func (m *ExchangeResponse) Reset()                    { *m = ExchangeResponse{} }
func (m *ExchangeResponse) String() string            { return proto.CompactTextString(m) }
func (*ExchangeResponse) ProtoMessage()               {}
func (*ExchangeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *ExchangeResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *ExchangeResponse) GetIDToken() string {
	if m != nil {
		return m.IDToken
	}
	return ""
}

func (m *ExchangeResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *ExchangeResponse) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

type RefreshTokenRequest struct {
	RefreshToken string `protobuf:"bytes,1,opt,name=RefreshToken" json:"RefreshToken,omitempty"`
}

func (m *RefreshTokenRequest) Reset()                    { *m = RefreshTokenRequest{} }
func (m *RefreshTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*RefreshTokenRequest) ProtoMessage()               {}
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *RefreshTokenRequest) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type RefreshTokenResponse struct {
	AccessToken  string `protobuf:"bytes,1,opt,name=AccessToken,json=access_token" json:"AccessToken,omitempty"`
	IDToken      string `protobuf:"bytes,2,opt,name=IDToken,json=id_token" json:"IDToken,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=RefreshToken,json=refresh_token" json:"RefreshToken,omitempty"`
	Expiry       int64  `protobuf:"varint,4,opt,name=Expiry,json=expiry" json:"Expiry,omitempty"`
}

func (m *RefreshTokenResponse) Reset()                    { *m = RefreshTokenResponse{} }
func (m *RefreshTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*RefreshTokenResponse) ProtoMessage()               {}
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *RefreshTokenResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *RefreshTokenResponse) GetIDToken() string {
	if m != nil {
		return m.IDToken
	}
	return ""
}

func (m *RefreshTokenResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *RefreshTokenResponse) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

func init() {
	proto.RegisterType((*Token)(nil), "auth.Token")
	proto.RegisterType((*MatchInvalidTokenRequest)(nil), "auth.MatchInvalidTokenRequest")
	proto.RegisterType((*MatchInvalidTokenResponse)(nil), "auth.MatchInvalidTokenResponse")
	proto.RegisterType((*RevokeTokenRequest)(nil), "auth.RevokeTokenRequest")
	proto.RegisterType((*RevokeTokenResponse)(nil), "auth.RevokeTokenResponse")
	proto.RegisterType((*PruneTokensRequest)(nil), "auth.PruneTokensRequest")
	proto.RegisterType((*PruneTokensResponse)(nil), "auth.PruneTokensResponse")
	proto.RegisterType((*ID)(nil), "auth.ID")
	proto.RegisterType((*GetLoginRequest)(nil), "auth.GetLoginRequest")
	proto.RegisterType((*GetLoginResponse)(nil), "auth.GetLoginResponse")
	proto.RegisterType((*CreateLoginRequest)(nil), "auth.CreateLoginRequest")
	proto.RegisterType((*CreateLoginResponse)(nil), "auth.CreateLoginResponse")
	proto.RegisterType((*AcceptLoginRequest)(nil), "auth.AcceptLoginRequest")
	proto.RegisterType((*AcceptLoginResponse)(nil), "auth.AcceptLoginResponse")
	proto.RegisterType((*GetConsentRequest)(nil), "auth.GetConsentRequest")
	proto.RegisterType((*GetConsentResponse)(nil), "auth.GetConsentResponse")
	proto.RegisterType((*CreateConsentRequest)(nil), "auth.CreateConsentRequest")
	proto.RegisterType((*CreateConsentResponse)(nil), "auth.CreateConsentResponse")
	proto.RegisterType((*AcceptConsentRequest)(nil), "auth.AcceptConsentRequest")
	proto.RegisterType((*AcceptConsentResponse)(nil), "auth.AcceptConsentResponse")
	proto.RegisterType((*CreateLogoutRequest)(nil), "auth.CreateLogoutRequest")
	proto.RegisterType((*CreateLogoutResponse)(nil), "auth.CreateLogoutResponse")
	proto.RegisterType((*AcceptLogoutRequest)(nil), "auth.AcceptLogoutRequest")
	proto.RegisterType((*AcceptLogoutResponse)(nil), "auth.AcceptLogoutResponse")
	proto.RegisterType((*CreateAuthCodeRequest)(nil), "auth.CreateAuthCodeRequest")
	proto.RegisterType((*CreateAuthCodeResponse)(nil), "auth.CreateAuthCodeResponse")
	proto.RegisterType((*VerifyTokenRequest)(nil), "auth.VerifyTokenRequest")
	proto.RegisterType((*VerifyTokenResponse)(nil), "auth.VerifyTokenResponse")
	proto.RegisterType((*ExchangeRequest)(nil), "auth.ExchangeRequest")
	proto.RegisterType((*ExchangeResponse)(nil), "auth.ExchangeResponse")
	proto.RegisterType((*RefreshTokenRequest)(nil), "auth.RefreshTokenRequest")
	proto.RegisterType((*RefreshTokenResponse)(nil), "auth.RefreshTokenResponse")
	proto.RegisterEnum("auth.State", State_name, State_value)
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xdd, 0x72, 0xdb, 0x44,
	0x14, 0xb6, 0xec, 0xd8, 0x4e, 0x8f, 0x9d, 0xc4, 0xd9, 0xfc, 0x54, 0x11, 0x9d, 0xe0, 0x6e, 0x67,
	0x4a, 0xa6, 0x94, 0x14, 0xcc, 0x30, 0x94, 0x76, 0xa6, 0x1d, 0x63, 0x9b, 0xe0, 0xd2, 0xd0, 0xa0,
	0xa4, 0x19, 0xee, 0x32, 0xaa, 0xb4, 0x89, 0x45, 0x8c, 0x14, 0x24, 0x39, 0x53, 0x3f, 0x04, 0x17,
	0xbc, 0x02, 0x0f, 0xc2, 0x73, 0xf0, 0x10, 0x3c, 0x00, 0xc3, 0x15, 0xb3, 0x7f, 0xd2, 0xae, 0xa4,
	0x86, 0xa4, 0x37, 0xdc, 0x69, 0xcf, 0xd9, 0x73, 0xf6, 0x3b, 0xff, 0x67, 0x04, 0xe0, 0xcc, 0x92,
	0xc9, 0xee, 0x45, 0x14, 0x26, 0x21, 0x5a, 0xa0, 0xdf, 0x78, 0x04, 0xf5, 0xa3, 0xf0, 0x9c, 0x04,
	0x68, 0x1d, 0xea, 0xc7, 0xce, 0x74, 0x46, 0x4c, 0xa3, 0x6b, 0xec, 0xdc, 0xb2, 0xf9, 0x01, 0xdd,
	0x87, 0xe5, 0xbe, 0xe7, 0xf9, 0x89, 0x1f, 0x06, 0xce, 0x74, 0x1c, 0x9c, 0x86, 0x66, 0x95, 0xb1,
	0x73, 0x54, 0xfc, 0x29, 0x98, 0xfb, 0x4e, 0xe2, 0x4e, 0xc6, 0xc1, 0xa5, 0x33, 0xf5, 0x3d, 0xa6,
	0xd2, 0x26, 0xbf, 0xcc, 0x48, 0x9c, 0x50, 0xcd, 0xec, 0x2c, 0x35, 0xb3, 0x03, 0x3e, 0x85, 0xad,
	0x12, 0x89, 0xf8, 0x22, 0x0c, 0x62, 0x82, 0xee, 0x42, 0xfd, 0x30, 0x71, 0x12, 0x0e, 0x66, 0xb9,
	0xd7, 0xda, 0x65, 0xb8, 0x19, 0xc9, 0xe6, 0x1c, 0x8a, 0xcc, 0x26, 0x97, 0xa1, 0xeb, 0x50, 0x14,
	0x2a, 0x32, 0x9d, 0x8a, 0xbf, 0x04, 0x44, 0x29, 0xe7, 0x44, 0xc3, 0x74, 0x57, 0xc5, 0xd4, 0x92,
	0x0f, 0xf0, 0x2b, 0x02, 0xe0, 0x23, 0x58, 0xd3, 0x04, 0x05, 0x34, 0x13, 0x9a, 0x87, 0x33, 0xd7,
	0x25, 0x71, 0xcc, 0x64, 0x17, 0x6d, 0x79, 0xc4, 0xeb, 0x80, 0x0e, 0xa2, 0x59, 0xc0, 0xef, 0xc7,
	0xe2, 0x25, 0xfc, 0x09, 0xac, 0x69, 0x54, 0xa1, 0x66, 0x13, 0x1a, 0x09, 0xa3, 0x98, 0x46, 0xb7,
	0xb6, 0x73, 0xcb, 0x16, 0x27, 0x6c, 0x43, 0x75, 0x3c, 0x44, 0x77, 0xe0, 0xd6, 0x60, 0xe2, 0x4c,
	0xa7, 0x24, 0x38, 0x93, 0x01, 0xc9, 0x08, 0xc8, 0x82, 0xc5, 0x63, 0x12, 0xf9, 0xa7, 0x3e, 0x89,
	0x84, 0xd1, 0xe9, 0x19, 0x21, 0x58, 0x18, 0x1c, 0xda, 0xdf, 0x98, 0x35, 0x46, 0x67, 0xdf, 0xf8,
	0x11, 0xac, 0xec, 0x91, 0xe4, 0x65, 0x78, 0xe6, 0xa7, 0xf6, 0x5f, 0xf9, 0x00, 0xfe, 0xc7, 0x80,
	0x4e, 0x26, 0x21, 0x10, 0x5f, 0x8d, 0x89, 0xb9, 0xe5, 0xcd, 0x4f, 0xc4, 0x4d, 0x04, 0x24, 0x79,
	0xa4, 0x72, 0x87, 0x24, 0x8e, 0x69, 0x3c, 0x86, 0x02, 0x56, 0x46, 0x40, 0xdb, 0x00, 0x02, 0xd3,
	0x6b, 0xfb, 0xa5, 0xb9, 0xc0, 0xd8, 0x0a, 0x85, 0x87, 0x99, 0x9d, 0x88, 0x77, 0xe8, 0x86, 0x17,
	0xc4, 0xac, 0x33, 0x7f, 0xe5, 0xa8, 0xe8, 0x21, 0xac, 0xa6, 0x94, 0xfe, 0xcc, 0xf3, 0x49, 0xe0,
	0x12, 0xb3, 0xc1, 0xae, 0x16, 0x19, 0xd4, 0x83, 0x83, 0xa9, 0x4f, 0x82, 0x64, 0x3c, 0x34, 0x9b,
	0xdc, 0x83, 0xf2, 0x8c, 0x4f, 0x01, 0x0d, 0x22, 0xe2, 0x24, 0x44, 0x73, 0x98, 0x2a, 0x61, 0xe8,
	0x12, 0x34, 0x96, 0x0c, 0x44, 0x6c, 0x56, 0x79, 0x2c, 0xf9, 0x89, 0x5a, 0x2e, 0x5f, 0x8c, 0xcd,
	0x1a, 0x63, 0x65, 0x04, 0xfc, 0x05, 0xac, 0x69, 0xef, 0x08, 0x37, 0x6f, 0x43, 0x9d, 0x11, 0x44,
	0x66, 0x2e, 0xf2, 0xcc, 0x1c, 0x0f, 0x6d, 0x4e, 0xc6, 0x13, 0x40, 0x7d, 0xd7, 0x25, 0x17, 0x37,
	0x88, 0xe7, 0x95, 0x09, 0xa3, 0x04, 0xae, 0xa6, 0x05, 0x0e, 0x6f, 0xc0, 0x9a, 0xf6, 0x12, 0x07,
	0x88, 0x3f, 0x83, 0xd5, 0x3d, 0x92, 0x0c, 0xe8, 0x77, 0x90, 0x5c, 0x2f, 0x9f, 0xfe, 0x30, 0x00,
	0xa9, 0x32, 0xd7, 0xca, 0xa8, 0xfb, 0xb0, 0xcc, 0x1e, 0xce, 0x92, 0x47, 0x14, 0xb8, 0x4e, 0xa5,
	0x91, 0x17, 0x88, 0xc7, 0x1e, 0x09, 0x12, 0x6e, 0x25, 0x37, 0xa5, 0xc8, 0x50, 0xcd, 0x5d, 0xd0,
	0xf3, 0x54, 0x8d, 0x70, 0x3d, 0x97, 0x13, 0xcf, 0x60, 0x9d, 0xc7, 0x2a, 0x67, 0xb6, 0xc4, 0x98,
	0x37, 0x23, 0x47, 0xc5, 0x4f, 0x61, 0x23, 0x27, 0x2f, 0x5c, 0x80, 0xa1, 0x29, 0x48, 0x85, 0x78,
	0x4b, 0x06, 0xfe, 0xbb, 0x0a, 0xeb, 0x3c, 0x10, 0x37, 0x71, 0xfa, 0xfb, 0x65, 0x25, 0xda, 0x87,
	0x56, 0x9f, 0xb5, 0x33, 0xde, 0x1e, 0x17, 0xba, 0xb5, 0x9d, 0x56, 0xef, 0x63, 0x0e, 0xaa, 0x0c,
	0xc4, 0xae, 0x72, 0x7b, 0x14, 0x24, 0xd1, 0xdc, 0x56, 0xe5, 0x51, 0x1f, 0x9a, 0xe3, 0x21, 0x57,
	0x55, 0x67, 0xaa, 0x3e, 0xba, 0x42, 0x95, 0xb8, 0xc9, 0xd5, 0x48, 0x39, 0xeb, 0x19, 0x74, 0xf2,
	0x6f, 0xa0, 0x0e, 0xd4, 0xce, 0xc9, 0x5c, 0xd8, 0x4c, 0x3f, 0xe9, 0x90, 0xb9, 0x64, 0xe3, 0x8b,
	0x27, 0x09, 0x3f, 0x3c, 0xa9, 0x3e, 0x36, 0xac, 0x27, 0xd0, 0x56, 0x15, 0xdf, 0x44, 0x16, 0xdf,
	0x86, 0x8d, 0x1c, 0x52, 0x51, 0x04, 0x3f, 0x2b, 0xc5, 0x1b, 0xce, 0xd2, 0x88, 0xe8, 0xdd, 0xcc,
	0x28, 0x74, 0xb3, 0xf7, 0xec, 0x92, 0xf8, 0xb1, 0xcc, 0x3f, 0xf9, 0x9c, 0x48, 0x9f, 0x2e, 0x34,
	0x38, 0xa5, 0x90, 0x3d, 0x82, 0x8e, 0xe7, 0x4a, 0x11, 0x2b, 0x40, 0xaf, 0x4e, 0x9d, 0xae, 0x9e,
	0x04, 0x1c, 0xaa, 0x16, 0x57, 0x0c, 0x6d, 0x9b, 0x9c, 0x46, 0x24, 0x9e, 0xf0, 0x2b, 0x1c, 0xb1,
	0x46, 0xc3, 0x9b, 0x32, 0x6d, 0x75, 0xd0, 0x78, 0x2e, 0x8b, 0xa1, 0x3f, 0x4b, 0x26, 0x83, 0xd0,
	0x23, 0x12, 0xd4, 0x35, 0x8a, 0x41, 0xab, 0xd2, 0x6a, 0xae, 0x0f, 0x77, 0xa1, 0x65, 0x13, 0xcf,
	0x8f, 0x88, 0x9b, 0xbc, 0xb6, 0xc7, 0x02, 0x93, 0x4a, 0xc2, 0x0f, 0x61, 0x33, 0xff, 0xb4, 0xf0,
	0x24, 0x9d, 0x9b, 0xa1, 0x27, 0x7d, 0xc1, 0xbe, 0xf1, 0x03, 0x40, 0xac, 0x4d, 0xce, 0xaf, 0xb1,
	0xce, 0x0c, 0x60, 0x4d, 0xbb, 0xfb, 0x5f, 0xdb, 0x02, 0x7d, 0x70, 0xe8, 0x24, 0x0e, 0x33, 0xa2,
	0x6d, 0xb3, 0x6f, 0xfc, 0x02, 0x56, 0x46, 0x6f, 0xdd, 0x89, 0x13, 0x9c, 0xa5, 0x3e, 0xc9, 0xe1,
	0x72, 0x43, 0x8f, 0xa0, 0x7b, 0xd0, 0xa6, 0xb4, 0x5c, 0x4b, 0x5f, 0xa2, 0xbc, 0x93, 0x4b, 0x41,
	0xc4, 0xbf, 0x1a, 0xd0, 0xc9, 0x94, 0xa5, 0x7b, 0x95, 0x16, 0x58, 0xae, 0xb4, 0xed, 0x30, 0xd2,
	0x09, 0xdb, 0x40, 0xd0, 0x56, 0x56, 0xb1, 0xc2, 0xbf, 0xbe, 0x27, 0x58, 0xf7, 0x4a, 0x83, 0xbe,
	0x14, 0x71, 0x9a, 0xb8, 0xb4, 0x09, 0x8d, 0xd1, 0xdb, 0x0b, 0x3f, 0x9a, 0xb3, 0xfe, 0x5a, 0xb3,
	0x1b, 0x84, 0x9d, 0xf0, 0x57, 0x74, 0x9d, 0xca, 0x84, 0xb3, 0x98, 0xeb, 0x3a, 0x8d, 0x92, 0x44,
	0xfa, 0xcd, 0x80, 0x75, 0x5d, 0xf6, 0x7f, 0x37, 0xe7, 0x01, 0x16, 0x1b, 0x2a, 0x6a, 0xc3, 0xe2,
	0xf7, 0xaf, 0x4e, 0xf6, 0xfb, 0x47, 0x83, 0x6f, 0x3b, 0x15, 0xd4, 0x82, 0xa6, 0x3d, 0x3a, 0x7e,
	0xf5, 0xdd, 0x68, 0xd8, 0x31, 0x7a, 0x7f, 0x19, 0xd0, 0xa1, 0x89, 0x26, 0x40, 0xd3, 0x5d, 0x32,
	0x42, 0x3f, 0x40, 0x5b, 0xdd, 0x7b, 0xd1, 0x36, 0xcf, 0xf1, 0x77, 0x6d, 0xcf, 0xd6, 0x87, 0xef,
	0xe4, 0x8b, 0x72, 0xaa, 0xa0, 0xe7, 0xd0, 0xe0, 0xda, 0x91, 0xc9, 0x2f, 0x17, 0x17, 0x5e, 0x6b,
	0xab, 0x84, 0x93, 0x2a, 0x18, 0x42, 0x4b, 0xd9, 0x51, 0xa5, 0x96, 0xe2, 0x32, 0x2b, 0xb5, 0x94,
	0x2c, 0xb4, 0xb8, 0xd2, 0xfb, 0xd3, 0x80, 0x25, 0x36, 0xf7, 0x0e, 0xa2, 0xf0, 0xd2, 0xf7, 0x48,
	0x84, 0x9e, 0xc2, 0xa2, 0x5c, 0x23, 0xd1, 0x06, 0x17, 0xcd, 0x2d, 0xa2, 0xd6, 0x66, 0x9e, 0xac,
	0x82, 0x52, 0xf6, 0x23, 0x09, 0xaa, 0xb8, 0x9a, 0x49, 0x50, 0x25, 0xcb, 0x14, 0xd7, 0xa2, 0x2c,
	0x31, 0x52, 0x4b, 0x71, 0x83, 0x92, 0x5a, 0xca, 0x36, 0x9e, 0x0a, 0x8d, 0xe4, 0x8a, 0xe8, 0x40,
	0xa9, 0x71, 0x7d, 0x80, 0x6c, 0xa7, 0x41, 0xb7, 0x53, 0x3b, 0xf4, 0xa1, 0x66, 0x99, 0x45, 0x46,
	0x0a, 0xee, 0x05, 0x2c, 0x69, 0x6b, 0x01, 0xb2, 0x54, 0x53, 0x72, 0x8a, 0x3e, 0x28, 0xe5, 0xa9,
	0xba, 0xb4, 0x51, 0x25, 0x75, 0x95, 0x4d, 0x5a, 0xa9, 0xab, 0x7c, 0xb6, 0x55, 0x7a, 0xbf, 0x1b,
	0x6c, 0xaf, 0x09, 0x67, 0x99, 0xb5, 0x7b, 0xd0, 0x56, 0x27, 0x10, 0xca, 0x3b, 0x3d, 0x9b, 0x2d,
	0x96, 0x55, 0xc6, 0x4a, 0x71, 0xee, 0x41, 0x5b, 0x9d, 0x0a, 0x28, 0xef, 0xf7, 0xa2, 0xa2, 0xd2,
	0x21, 0x52, 0xe9, 0x39, 0xbc, 0xb8, 0x68, 0x27, 0x4c, 0x51, 0xee, 0xc3, 0xb2, 0xde, 0xdf, 0x91,
	0xe6, 0xb5, 0xdc, 0xc0, 0xb1, 0xee, 0x94, 0x33, 0xd3, 0x27, 0x8e, 0x60, 0x35, 0xad, 0xdf, 0x74,
	0x61, 0x7e, 0x0e, 0x0d, 0xde, 0xe9, 0x65, 0x32, 0x15, 0x67, 0x84, 0x4c, 0xa6, 0x92, 0x89, 0x80,
	0x2b, 0xbd, 0x03, 0xae, 0x95, 0xbe, 0x25, 0x1b, 0x34, 0x2b, 0x15, 0x79, 0x90, 0xa5, 0x92, 0x1b,
	0x05, 0xb2, 0x54, 0xf2, 0x4d, 0x1d, 0x57, 0x7a, 0x3f, 0x02, 0x52, 0xfa, 0x0c, 0x6b, 0x5f, 0x24,
	0x42, 0x5f, 0x43, 0x53, 0x1c, 0x50, 0x5a, 0xfd, 0x85, 0x06, 0x2c, 0x9d, 0x5c, 0xd6, 0x5f, 0x71,
	0xe5, 0x4d, 0x83, 0xfd, 0x2b, 0xf8, 0xfc, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x3d, 0x62,
	0x3c, 0x39, 0x10, 0x00, 0x00,
}
