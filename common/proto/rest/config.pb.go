// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package rest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import tree "github.com/pydio/cells/common/proto/tree"
import object "github.com/pydio/cells/common/proto/object"
import ctl "github.com/pydio/cells/common/proto/ctl"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Configuration message. Data is an Json representation of any value
type Configuration struct {
	// Full slash-separated path to the config key
	FullPath string `protobuf:"bytes,1,opt,name=FullPath" json:"FullPath,omitempty"`
	// JSON-encoded data to store
	Data string `protobuf:"bytes,2,opt,name=Data" json:"Data,omitempty"`
}

func (m *Configuration) Reset()                    { *m = Configuration{} }
func (m *Configuration) String() string            { return proto.CompactTextString(m) }
func (*Configuration) ProtoMessage()               {}
func (*Configuration) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Configuration) GetFullPath() string {
	if m != nil {
		return m.FullPath
	}
	return ""
}

func (m *Configuration) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ListDataSourceRequest struct {
}

func (m *ListDataSourceRequest) Reset()                    { *m = ListDataSourceRequest{} }
func (m *ListDataSourceRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDataSourceRequest) ProtoMessage()               {}
func (*ListDataSourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

// Collection of datasources
type DataSourceCollection struct {
	DataSources []*object.DataSource `protobuf:"bytes,1,rep,name=DataSources" json:"DataSources,omitempty"`
	Total       int32                `protobuf:"varint,2,opt,name=Total" json:"Total,omitempty"`
}

func (m *DataSourceCollection) Reset()                    { *m = DataSourceCollection{} }
func (m *DataSourceCollection) String() string            { return proto.CompactTextString(m) }
func (*DataSourceCollection) ProtoMessage()               {}
func (*DataSourceCollection) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *DataSourceCollection) GetDataSources() []*object.DataSource {
	if m != nil {
		return m.DataSources
	}
	return nil
}

func (m *DataSourceCollection) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type DeleteDataSourceResponse struct {
	Success bool `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
}

func (m *DeleteDataSourceResponse) Reset()                    { *m = DeleteDataSourceResponse{} }
func (m *DeleteDataSourceResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteDataSourceResponse) ProtoMessage()               {}
func (*DeleteDataSourceResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *DeleteDataSourceResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ListPeersAddressesRequest struct {
}

func (m *ListPeersAddressesRequest) Reset()                    { *m = ListPeersAddressesRequest{} }
func (m *ListPeersAddressesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListPeersAddressesRequest) ProtoMessage()               {}
func (*ListPeersAddressesRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

type ListPeersAddressesResponse struct {
	// List of peer addresses
	PeerAddresses []string `protobuf:"bytes,1,rep,name=PeerAddresses" json:"PeerAddresses,omitempty"`
}

func (m *ListPeersAddressesResponse) Reset()                    { *m = ListPeersAddressesResponse{} }
func (m *ListPeersAddressesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListPeersAddressesResponse) ProtoMessage()               {}
func (*ListPeersAddressesResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *ListPeersAddressesResponse) GetPeerAddresses() []string {
	if m != nil {
		return m.PeerAddresses
	}
	return nil
}

type ListPeerFoldersRequest struct {
	// Restrict listing to a given peer
	PeerAddress string `protobuf:"bytes,1,opt,name=PeerAddress" json:"PeerAddress,omitempty"`
	// Path to the parent folder for listing
	Path string `protobuf:"bytes,2,opt,name=Path" json:"Path,omitempty"`
}

func (m *ListPeerFoldersRequest) Reset()                    { *m = ListPeerFoldersRequest{} }
func (m *ListPeerFoldersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListPeerFoldersRequest) ProtoMessage()               {}
func (*ListPeerFoldersRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *ListPeerFoldersRequest) GetPeerAddress() string {
	if m != nil {
		return m.PeerAddress
	}
	return ""
}

func (m *ListPeerFoldersRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ListStorageBucketsRequest struct {
	DataSource    *object.DataSource `protobuf:"bytes,1,opt,name=DataSource" json:"DataSource,omitempty"`
	BucketsRegexp string             `protobuf:"bytes,2,opt,name=BucketsRegexp" json:"BucketsRegexp,omitempty"`
}

func (m *ListStorageBucketsRequest) Reset()                    { *m = ListStorageBucketsRequest{} }
func (m *ListStorageBucketsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListStorageBucketsRequest) ProtoMessage()               {}
func (*ListStorageBucketsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *ListStorageBucketsRequest) GetDataSource() *object.DataSource {
	if m != nil {
		return m.DataSource
	}
	return nil
}

func (m *ListStorageBucketsRequest) GetBucketsRegexp() string {
	if m != nil {
		return m.BucketsRegexp
	}
	return ""
}

type Process struct {
	// Process ID
	ID string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	// Parent Process ID
	ParentID string `protobuf:"bytes,2,opt,name=ParentID" json:"ParentID,omitempty"`
	// Port to access the metrics api
	MetricsPort int32 `protobuf:"varint,3,opt,name=MetricsPort" json:"MetricsPort,omitempty"`
	// Id of peer node
	PeerId string `protobuf:"bytes,4,opt,name=PeerId" json:"PeerId,omitempty"`
	// Address of peer node
	PeerAddress string `protobuf:"bytes,5,opt,name=PeerAddress" json:"PeerAddress,omitempty"`
	// Parameters used to start this process
	StartTag string `protobuf:"bytes,6,opt,name=StartTag" json:"StartTag,omitempty"`
	// List of services running inside this process
	Services []string `protobuf:"bytes,7,rep,name=Services" json:"Services,omitempty"`
}

func (m *Process) Reset()                    { *m = Process{} }
func (m *Process) String() string            { return proto.CompactTextString(m) }
func (*Process) ProtoMessage()               {}
func (*Process) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *Process) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Process) GetParentID() string {
	if m != nil {
		return m.ParentID
	}
	return ""
}

func (m *Process) GetMetricsPort() int32 {
	if m != nil {
		return m.MetricsPort
	}
	return 0
}

func (m *Process) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

func (m *Process) GetPeerAddress() string {
	if m != nil {
		return m.PeerAddress
	}
	return ""
}

func (m *Process) GetStartTag() string {
	if m != nil {
		return m.StartTag
	}
	return ""
}

func (m *Process) GetServices() []string {
	if m != nil {
		return m.Services
	}
	return nil
}

type ListProcessesRequest struct {
	// Id of the peer node
	PeerId string `protobuf:"bytes,1,opt,name=PeerId" json:"PeerId,omitempty"`
	// Look for a service name
	ServiceName string `protobuf:"bytes,2,opt,name=ServiceName" json:"ServiceName,omitempty"`
}

func (m *ListProcessesRequest) Reset()                    { *m = ListProcessesRequest{} }
func (m *ListProcessesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListProcessesRequest) ProtoMessage()               {}
func (*ListProcessesRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *ListProcessesRequest) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

func (m *ListProcessesRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type ListProcessesResponse struct {
	Processes []*Process `protobuf:"bytes,1,rep,name=Processes" json:"Processes,omitempty"`
}

func (m *ListProcessesResponse) Reset()                    { *m = ListProcessesResponse{} }
func (m *ListProcessesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListProcessesResponse) ProtoMessage()               {}
func (*ListProcessesResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *ListProcessesResponse) GetProcesses() []*Process {
	if m != nil {
		return m.Processes
	}
	return nil
}

type ListVersioningPolicyRequest struct {
}

func (m *ListVersioningPolicyRequest) Reset()                    { *m = ListVersioningPolicyRequest{} }
func (m *ListVersioningPolicyRequest) String() string            { return proto.CompactTextString(m) }
func (*ListVersioningPolicyRequest) ProtoMessage()               {}
func (*ListVersioningPolicyRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

type VersioningPolicyCollection struct {
	Policies []*tree.VersioningPolicy `protobuf:"bytes,1,rep,name=Policies" json:"Policies,omitempty"`
}

func (m *VersioningPolicyCollection) Reset()                    { *m = VersioningPolicyCollection{} }
func (m *VersioningPolicyCollection) String() string            { return proto.CompactTextString(m) }
func (*VersioningPolicyCollection) ProtoMessage()               {}
func (*VersioningPolicyCollection) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *VersioningPolicyCollection) GetPolicies() []*tree.VersioningPolicy {
	if m != nil {
		return m.Policies
	}
	return nil
}

type ListVirtualNodesRequest struct {
}

func (m *ListVirtualNodesRequest) Reset()                    { *m = ListVirtualNodesRequest{} }
func (m *ListVirtualNodesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListVirtualNodesRequest) ProtoMessage()               {}
func (*ListVirtualNodesRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

type ListServiceRequest struct {
	// Filter services by a given status (ANY, STOPPED, STOPPING, RUNNING)
	StatusFilter ctl.ServiceStatus `protobuf:"varint,1,opt,name=StatusFilter,enum=ctl.ServiceStatus" json:"StatusFilter,omitempty"`
}

func (m *ListServiceRequest) Reset()                    { *m = ListServiceRequest{} }
func (m *ListServiceRequest) String() string            { return proto.CompactTextString(m) }
func (*ListServiceRequest) ProtoMessage()               {}
func (*ListServiceRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *ListServiceRequest) GetStatusFilter() ctl.ServiceStatus {
	if m != nil {
		return m.StatusFilter
	}
	return ctl.ServiceStatus_ANY
}

type ServiceCollection struct {
	Services []*ctl.Service `protobuf:"bytes,1,rep,name=Services" json:"Services,omitempty"`
	Total    int32          `protobuf:"varint,2,opt,name=Total" json:"Total,omitempty"`
}

func (m *ServiceCollection) Reset()                    { *m = ServiceCollection{} }
func (m *ServiceCollection) String() string            { return proto.CompactTextString(m) }
func (*ServiceCollection) ProtoMessage()               {}
func (*ServiceCollection) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *ServiceCollection) GetServices() []*ctl.Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *ServiceCollection) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type ControlServiceRequest struct {
	// Name of the service to stop
	ServiceName string `protobuf:"bytes,1,opt,name=ServiceName" json:"ServiceName,omitempty"`
	// Name of the node
	NodeName string `protobuf:"bytes,2,opt,name=NodeName" json:"NodeName,omitempty"`
	// Command to apply (START or STOP)
	Command ctl.ServiceCommand `protobuf:"varint,3,opt,name=Command,enum=ctl.ServiceCommand" json:"Command,omitempty"`
}

func (m *ControlServiceRequest) Reset()                    { *m = ControlServiceRequest{} }
func (m *ControlServiceRequest) String() string            { return proto.CompactTextString(m) }
func (*ControlServiceRequest) ProtoMessage()               {}
func (*ControlServiceRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *ControlServiceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ControlServiceRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *ControlServiceRequest) GetCommand() ctl.ServiceCommand {
	if m != nil {
		return m.Command
	}
	return ctl.ServiceCommand_START
}

type DiscoveryRequest struct {
	// Filter result to a specific endpoint type
	EndpointType string `protobuf:"bytes,1,opt,name=EndpointType" json:"EndpointType,omitempty"`
}

func (m *DiscoveryRequest) Reset()                    { *m = DiscoveryRequest{} }
func (m *DiscoveryRequest) String() string            { return proto.CompactTextString(m) }
func (*DiscoveryRequest) ProtoMessage()               {}
func (*DiscoveryRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *DiscoveryRequest) GetEndpointType() string {
	if m != nil {
		return m.EndpointType
	}
	return ""
}

type DiscoveryResponse struct {
	// Current Package Type, empty if user is not authenticated
	PackageType string `protobuf:"bytes,1,opt,name=PackageType" json:"PackageType,omitempty"`
	// Current Package Label, empty if user is not authenticated
	PackageLabel string `protobuf:"bytes,2,opt,name=PackageLabel" json:"PackageLabel,omitempty"`
	// Current Package Version, empty if user is not authenticated
	Version string `protobuf:"bytes,3,opt,name=Version" json:"Version,omitempty"`
	// Build stamp of the binary build, empty if user is not authenticated
	BuildStamp int32 `protobuf:"varint,4,opt,name=BuildStamp" json:"BuildStamp,omitempty"`
	// Revision of the current binary build, empty if user is not authenticated
	BuildRevision string `protobuf:"bytes,5,opt,name=BuildRevision" json:"BuildRevision,omitempty"`
	// List of endpoints and their corresponding URL access. Special case for grpc that just send back its port
	Endpoints map[string]string `protobuf:"bytes,6,rep,name=Endpoints" json:"Endpoints,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *DiscoveryResponse) Reset()                    { *m = DiscoveryResponse{} }
func (m *DiscoveryResponse) String() string            { return proto.CompactTextString(m) }
func (*DiscoveryResponse) ProtoMessage()               {}
func (*DiscoveryResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func (m *DiscoveryResponse) GetPackageType() string {
	if m != nil {
		return m.PackageType
	}
	return ""
}

func (m *DiscoveryResponse) GetPackageLabel() string {
	if m != nil {
		return m.PackageLabel
	}
	return ""
}

func (m *DiscoveryResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *DiscoveryResponse) GetBuildStamp() int32 {
	if m != nil {
		return m.BuildStamp
	}
	return 0
}

func (m *DiscoveryResponse) GetBuildRevision() string {
	if m != nil {
		return m.BuildRevision
	}
	return ""
}

func (m *DiscoveryResponse) GetEndpoints() map[string]string {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

type ConfigFormRequest struct {
	// Retrieve a configuration form for a given service
	ServiceName string `protobuf:"bytes,1,opt,name=ServiceName" json:"ServiceName,omitempty"`
}

func (m *ConfigFormRequest) Reset()                    { *m = ConfigFormRequest{} }
func (m *ConfigFormRequest) String() string            { return proto.CompactTextString(m) }
func (*ConfigFormRequest) ProtoMessage()               {}
func (*ConfigFormRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{19} }

func (m *ConfigFormRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type OpenApiResponse struct {
}

func (m *OpenApiResponse) Reset()                    { *m = OpenApiResponse{} }
func (m *OpenApiResponse) String() string            { return proto.CompactTextString(m) }
func (*OpenApiResponse) ProtoMessage()               {}
func (*OpenApiResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{20} }

func init() {
	proto.RegisterType((*Configuration)(nil), "rest.Configuration")
	proto.RegisterType((*ListDataSourceRequest)(nil), "rest.ListDataSourceRequest")
	proto.RegisterType((*DataSourceCollection)(nil), "rest.DataSourceCollection")
	proto.RegisterType((*DeleteDataSourceResponse)(nil), "rest.DeleteDataSourceResponse")
	proto.RegisterType((*ListPeersAddressesRequest)(nil), "rest.ListPeersAddressesRequest")
	proto.RegisterType((*ListPeersAddressesResponse)(nil), "rest.ListPeersAddressesResponse")
	proto.RegisterType((*ListPeerFoldersRequest)(nil), "rest.ListPeerFoldersRequest")
	proto.RegisterType((*ListStorageBucketsRequest)(nil), "rest.ListStorageBucketsRequest")
	proto.RegisterType((*Process)(nil), "rest.Process")
	proto.RegisterType((*ListProcessesRequest)(nil), "rest.ListProcessesRequest")
	proto.RegisterType((*ListProcessesResponse)(nil), "rest.ListProcessesResponse")
	proto.RegisterType((*ListVersioningPolicyRequest)(nil), "rest.ListVersioningPolicyRequest")
	proto.RegisterType((*VersioningPolicyCollection)(nil), "rest.VersioningPolicyCollection")
	proto.RegisterType((*ListVirtualNodesRequest)(nil), "rest.ListVirtualNodesRequest")
	proto.RegisterType((*ListServiceRequest)(nil), "rest.ListServiceRequest")
	proto.RegisterType((*ServiceCollection)(nil), "rest.ServiceCollection")
	proto.RegisterType((*ControlServiceRequest)(nil), "rest.ControlServiceRequest")
	proto.RegisterType((*DiscoveryRequest)(nil), "rest.DiscoveryRequest")
	proto.RegisterType((*DiscoveryResponse)(nil), "rest.DiscoveryResponse")
	proto.RegisterType((*ConfigFormRequest)(nil), "rest.ConfigFormRequest")
	proto.RegisterType((*OpenApiResponse)(nil), "rest.OpenApiResponse")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 834 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x6d, 0x6f, 0xdb, 0x36,
	0x10, 0x86, 0x9d, 0x38, 0x89, 0x2f, 0x2f, 0x6b, 0xb8, 0x34, 0x55, 0x5d, 0x6c, 0x08, 0x88, 0x61,
	0x08, 0x30, 0xcc, 0xc6, 0xdc, 0xae, 0x1b, 0x86, 0x01, 0x43, 0x13, 0x35, 0x40, 0x80, 0x2c, 0x13,
	0xe4, 0x60, 0xdf, 0x69, 0xe9, 0xe6, 0x72, 0xa1, 0x44, 0x8d, 0xa4, 0x82, 0xf9, 0xfb, 0xfe, 0xd6,
	0x7e, 0xc0, 0xfe, 0xd5, 0x40, 0x8a, 0x92, 0x69, 0xa7, 0x05, 0xf2, 0x21, 0xb1, 0xee, 0xb9, 0x17,
	0x3e, 0x77, 0xcf, 0x89, 0x82, 0x83, 0x4c, 0x96, 0x7f, 0xf0, 0xc5, 0xb8, 0x52, 0xd2, 0x48, 0xb2,
	0xad, 0x50, 0x9b, 0xd1, 0xeb, 0x05, 0x37, 0x1f, 0xea, 0xf9, 0x38, 0x93, 0xc5, 0xa4, 0x5a, 0xe6,
	0x5c, 0x4e, 0x32, 0x14, 0x42, 0x4f, 0x32, 0x59, 0x14, 0xb2, 0x9c, 0xb8, 0xd0, 0x89, 0x51, 0x88,
	0xee, 0x5f, 0x93, 0x3a, 0xfa, 0xe1, 0x29, 0x49, 0x72, 0xfe, 0x27, 0x66, 0xc6, 0xff, 0xf8, 0xc4,
	0xef, 0x9e, 0x92, 0x98, 0x19, 0x61, 0xff, 0x9a, 0x14, 0xfa, 0x0b, 0x1c, 0x5e, 0x3a, 0xda, 0xb5,
	0x62, 0x86, 0xcb, 0x92, 0x8c, 0x60, 0xef, 0xaa, 0x16, 0x22, 0x61, 0xe6, 0x43, 0xd4, 0x3b, 0xeb,
	0x9d, 0x0f, 0xd3, 0xce, 0x26, 0x04, 0xb6, 0x63, 0x66, 0x58, 0xd4, 0x77, 0xb8, 0x7b, 0xa6, 0x2f,
	0xe0, 0xf9, 0x0d, 0xd7, 0xc6, 0x3e, 0xcf, 0x64, 0xad, 0x32, 0x4c, 0xf1, 0xaf, 0x1a, 0xb5, 0xa1,
	0x73, 0x38, 0x59, 0x81, 0x97, 0x52, 0x08, 0xcc, 0xdc, 0x01, 0x6f, 0x60, 0x7f, 0x85, 0xeb, 0xa8,
	0x77, 0xb6, 0x75, 0xbe, 0x3f, 0x25, 0x63, 0xdf, 0x48, 0x50, 0x27, 0x0c, 0x23, 0x27, 0x30, 0xb8,
	0x93, 0x86, 0x09, 0x77, 0xf6, 0x20, 0x6d, 0x0c, 0xfa, 0x06, 0xa2, 0x18, 0x05, 0x1a, 0x0c, 0x8f,
	0xd7, 0x95, 0x2c, 0x35, 0x92, 0x08, 0x76, 0x67, 0x75, 0x96, 0xa1, 0xd6, 0xae, 0x8f, 0xbd, 0xb4,
	0x35, 0xe9, 0x2b, 0x78, 0x69, 0x29, 0x27, 0x88, 0x4a, 0xbf, 0xcb, 0x73, 0x85, 0x5a, 0xa3, 0x6e,
	0x69, 0x5f, 0xc0, 0xe8, 0x63, 0x4e, 0x5f, 0xf4, 0x2b, 0x38, 0xb4, 0x9e, 0xce, 0xe1, 0xe8, 0x0f,
	0xd3, 0x75, 0x90, 0xde, 0xc2, 0x69, 0x5b, 0xe3, 0x4a, 0x8a, 0x1c, 0x55, 0x5b, 0x9d, 0x9c, 0xc1,
	0x7e, 0x10, 0xea, 0x07, 0x1c, 0x42, 0x76, 0xc6, 0x6e, 0xf6, 0x7e, 0xc6, 0xf6, 0x99, 0xd6, 0x0d,
	0xe1, 0x99, 0x91, 0x8a, 0x2d, 0xf0, 0xa2, 0xce, 0xee, 0xd1, 0x74, 0x25, 0xa7, 0x00, 0xab, 0xee,
	0x5d, 0xc5, 0x8f, 0x8f, 0x33, 0x88, 0xb2, 0x6d, 0x74, 0x55, 0x16, 0xf8, 0x77, 0xe5, 0x4f, 0x5b,
	0x07, 0xe9, 0x7f, 0x3d, 0xd8, 0x4d, 0x94, 0xb4, 0x33, 0x23, 0x47, 0xd0, 0xbf, 0x8e, 0x3d, 0xdf,
	0xfe, 0x75, 0x6c, 0xd7, 0x24, 0x61, 0x0a, 0x4b, 0x73, 0x1d, 0xfb, 0xe4, 0xce, 0xb6, 0x4d, 0xfe,
	0x8a, 0x46, 0xf1, 0x4c, 0x27, 0x52, 0x99, 0x68, 0xcb, 0x29, 0x16, 0x42, 0xe4, 0x14, 0x76, 0x6c,
	0xcf, 0xd7, 0x79, 0xb4, 0xed, 0x72, 0xbd, 0xb5, 0x39, 0x9e, 0xc1, 0xe3, 0xf1, 0x8c, 0x60, 0x6f,
	0x66, 0x98, 0x32, 0x77, 0x6c, 0x11, 0xed, 0x34, 0xe7, 0xb6, 0xb6, 0xf3, 0xa1, 0x7a, 0xe0, 0x76,
	0xad, 0x76, 0x9d, 0x2e, 0x9d, 0x4d, 0x13, 0x38, 0x71, 0x92, 0x34, 0xed, 0x74, 0x72, 0x07, 0x4c,
	0x7a, 0x9b, 0x4c, 0x7c, 0xee, 0x2d, 0x2b, 0xd0, 0xb7, 0x18, 0x42, 0x34, 0x6e, 0x16, 0x3f, 0xa8,
	0xe8, 0x77, 0xe4, 0x1b, 0x18, 0x76, 0xa0, 0x5f, 0xef, 0xc3, 0xb1, 0xbd, 0x0d, 0xc6, 0x1e, 0x4e,
	0x57, 0x7e, 0xfa, 0x05, 0xbc, 0xb2, 0x55, 0x7e, 0x47, 0xa5, 0xb9, 0x2c, 0x79, 0xb9, 0x48, 0xa4,
	0xe0, 0xd9, 0xb2, 0xdd, 0xc6, 0x04, 0x46, 0x9b, 0xae, 0xe0, 0x55, 0x9a, 0xc2, 0x9e, 0xc3, 0x78,
	0x77, 0xd0, 0xe9, 0xd8, 0xdd, 0x23, 0x8f, 0xca, 0x75, 0x71, 0xf4, 0x25, 0xbc, 0x70, 0x07, 0x72,
	0x65, 0x6a, 0x26, 0x6e, 0x65, 0xbe, 0x5a, 0xfd, 0x1b, 0x20, 0x6e, 0xcd, 0x9a, 0x26, 0xdb, 0x09,
	0xbd, 0x85, 0x83, 0x99, 0x61, 0xa6, 0xd6, 0x57, 0x5c, 0x18, 0x54, 0x6e, 0x4e, 0x47, 0x53, 0x32,
	0xb6, 0x77, 0x88, 0x0f, 0x6d, 0xfc, 0xe9, 0x5a, 0x1c, 0x9d, 0xc1, 0xb1, 0x77, 0x07, 0x8c, 0xcf,
	0x03, 0x89, 0x1a, 0xc6, 0x07, 0x61, 0xa1, 0x95, 0x60, 0x9f, 0x78, 0xe1, 0xff, 0xe9, 0xc1, 0xf3,
	0x4b, 0x59, 0x1a, 0x25, 0xc5, 0x06, 0xcd, 0x0d, 0xc1, 0x7a, 0x8f, 0x04, 0xb3, 0xeb, 0x61, 0xdb,
	0x0d, 0xf4, 0xec, 0x6c, 0xf2, 0x2d, 0xec, 0x5e, 0xca, 0xa2, 0x60, 0x65, 0xee, 0xd6, 0xf5, 0x68,
	0xfa, 0x79, 0x48, 0xcb, 0xbb, 0xd2, 0x36, 0x86, 0xbe, 0x85, 0x67, 0x31, 0xd7, 0x99, 0x7c, 0x40,
	0xd5, 0x4a, 0x45, 0x28, 0x1c, 0xbc, 0x2f, 0xf3, 0x4a, 0xf2, 0xd2, 0xdc, 0x2d, 0xab, 0x96, 0xc1,
	0x1a, 0x46, 0xff, 0xed, 0xc3, 0x71, 0x90, 0xe8, 0x17, 0xc6, 0x6e, 0x3d, 0xcb, 0xee, 0xd9, 0x02,
	0x83, 0xc4, 0x10, 0xb2, 0xb5, 0xbd, 0x79, 0xc3, 0xe6, 0x28, 0x3c, 0xfd, 0x35, 0xcc, 0xde, 0x77,
	0x5e, 0x76, 0xd7, 0xc2, 0x30, 0x6d, 0x4d, 0xf2, 0x25, 0xc0, 0x45, 0xcd, 0x45, 0x3e, 0x33, 0xac,
	0xa8, 0xdc, 0x1b, 0x37, 0x48, 0x03, 0xa4, 0xb9, 0x0d, 0xb8, 0xc8, 0x53, 0x7c, 0xe0, 0x2e, 0x7f,
	0xd0, 0xde, 0x06, 0x01, 0x48, 0x62, 0x18, 0xb6, 0xbd, 0xe8, 0x68, 0xc7, 0x69, 0xf7, 0x75, 0xb3,
	0xd6, 0x8f, 0x3a, 0x1a, 0x77, 0x81, 0xef, 0x4b, 0xa3, 0x96, 0xe9, 0x2a, 0x71, 0xf4, 0x33, 0x1c,
	0xad, 0x3b, 0xc9, 0x33, 0xd8, 0xba, 0xc7, 0xa5, 0xef, 0xda, 0x3e, 0x5a, 0xe9, 0x1f, 0x98, 0xa8,
	0x5b, 0x95, 0x1a, 0xe3, 0xa7, 0xfe, 0x8f, 0x3d, 0xfa, 0x3d, 0x1c, 0x37, 0x5f, 0xab, 0x2b, 0xa9,
	0x8a, 0x27, 0x2b, 0x4f, 0x8f, 0xe1, 0xb3, 0xdf, 0x2a, 0x2c, 0xdf, 0x55, 0xbc, 0x65, 0x38, 0xdf,
	0x71, 0x9f, 0xbf, 0xd7, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xf8, 0xbc, 0xe7, 0x78, 0xb5, 0x07,
	0x00, 0x00,
}
